name: gradle-build&deploy-docker-compose example

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: List directory contents
        run: ls -R

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: ${{ github.workspace }}

      - name: Run tests
        run: ./gradlew test
        working-directory: ${{ github.workspace }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate unique tag
        id: tag
        run: echo "::set-output name=TAG::beta-$(date +'%Y%m%d%H%M%S')-${GITHUB_SHA::8}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}
          push: true
          tags: |
            <your_dockerhub_repository/your_image_name>:${{ steps.tag.outputs.TAG }}
            <your_dockerhub_repository/your_image_name>:<your_default_tag>
          cache-from: type=gha
          cache-to: type=gha,mode=max

    steps:
      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE_CONTENT }}" > .env

      - name: Deploy '.env' to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.MINI_HOST }}
          username: ${{ secrets.MINI_USERNAME }}
          key: ${{ secrets.MINI_PRIVATE_KEY }}
          port: ${{ secrets.MINI_SSH_PORT }}
          source: ".env"
          target: ${{ secrets.MINI_PROJECT_DEPLOY_ROOT }}

      - name: SSH to HomeServer and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.MINI_HOST }}
          username: ${{ secrets.MINI_USERNAME }}
          key: ${{ secrets.MINI_PRIVATE_KEY }}
          port: ${{ secrets.MINI_SSH_PORT }}
          script: |
            cd "${{ secrets.MINI_PROJECT_DEPLOY_ROOT }}"
            docker-compose -f docker-compose-beta.yaml pull --quiet log-app
            docker-compose -f docker-compose-beta.yaml down
            ./compose-up.sh
            echo "Removing specific images older than 24 hours..."
            docker images --format '{{.ID}} {{.CreatedAt}}' "jyyoon0615/safely-langsmith-log-collector:*" |
            awk '$2 <= "'$(date -d '24 hours ago' +'%Y-%m-%d %H:%M:%S')'" {print $1}' |
            xargs -r docker rmi --force || true

